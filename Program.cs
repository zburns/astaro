using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FirewallBackupLogs
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
             * 
             * In order to make this work, I had to do the following on the Sophos UTM
             * 
             * On the WebAdmin dashboard, go to Management -> System Setting -> Shell Access and turn on SSH Shell Access.
             * Set the root password
             * Put the public key generated by PuttyGen in there ans save the private key to your network share
             *
             * Enable SSH Connection ONLY from the Local Network. 
             * 
             * Now we can login as root and SCP the files off of there to a local machine or network folder, etc.
             * 
             * 
             */

            try
            {
                Console.WriteLine("Logging into Astaro/Sophos UTM 9 via root private key...");
                Chilkat.Ssh ssh = new Chilkat.Ssh();
                ssh.UnlockComponent("INSERT YOUR CHILKAT SSH COMPONENT NUMBER HERE");
                ssh.Connect("IP ADDRESS", SSH_PORT);
                ssh.IdleTimeoutMs = 5000;  //wait 5 seconds when reading responses incase slow
                //ssh.AuthenticatePw("loginuser", "xxxxxxx");

                Console.WriteLine("Using private key login...");
                Chilkat.SshKey key = new Chilkat.SshKey();
                key.FromPuttyPrivateKey(key.LoadText("T:\\FirewallBackupLogs\\putty private key.ppk"));
                //Authenticate with the SSH server using the login and private key.
                //(The corresponding public key should've been installed on the SSH server beforehand.)
                ssh.AuthenticatePk("root", key);

                Console.WriteLine("Synching and Saving Changes to T:\\FilewallBackupLogs");
                Console.WriteLine("(This may take up to 30 minutes...Current Time: " + System.DateTime.Now.ToShortTimeString() + ")");
                // Now init scp and start synching remote host with local directory and transfer what is missing
                Chilkat.Scp scp = new Chilkat.Scp();
                scp.UseSsh(ssh);

                string remoteRoot = "/var/log/";
                string localRoot = "T:/FirewallBackupLogs";

                //  Download synchronization modes:
                //  mode=0: Download all files
                //  mode=1: Download all files that do not exist on the local filesystem.
                //  mode=2: Download newer or non-existant files.
                //  mode=3: Download only newer files.
                //  If a file does not already exist on the local filesystem, it is not downloaded from the server.
                //  mode=5: Download only missing files or files with size differences.
                //  mode=6: Same as mode 5, but also download newer files.
                int mode = 2;

                //  Sync the entire tree by using recursion.
                scp.SyncTreeDownload(remoteRoot, localRoot, mode, true);
                ssh.Disconnect();
                Console.WriteLine("Disconnected.  Have a great day!");
            }
            catch (System.Exception ex)
            {
                Console.WriteLine("Error backing up Firewall...");
                Console.WriteLine(ex.Message);
                Console.ReadLine();
            }
        }
    }
}
